# This workflow automatically builds the Github Pages website and deploys it to the github-pages branch
# for distribution. During this process it also performs secondary publishing steps required such
# as clearing the Cloudflare cache to reflect changes immediately.

name: Build/Deploy Website
on:
  # Allow manual deployments from Github's UI/API
  workflow_dispatch:

  # Release a new build anytime a release change is published to the repository
  push:
    branches: [ release ]

  # Force a new build every night to ensure the open source projects are kept up to date.
  schedule:
    - cron: 0 0 * * *

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the release branch of the repository under $GITHUB_WORKSPACE
      - name: Check out the release branch
        uses: actions/checkout@v2
        with:
          ref: release

      # Deploy the website to the release branch to be published by Github Pages
      - uses: jeffreytse/jekyll-deploy-action@v0.3.1
        with:
          provider: 'github'
          token: ${{ secrets.GITHUB_TOKEN }} # It's your Personal Access Token(PAT)
          repository: ''             # Default is current repository
          branch: 'github-pages'     # Default is gh-pages for github provider
          jekyll_src: './'           # Default is root directory
          jekyll_cfg: '_config.yml'  # Default is _config.yml
          jekyll_baseurl: ''         # Default is according to _config.yml
          bundler_ver: '>=0'         # Default is latest bundler version
          cname: ''                  # Default is to not use a cname
          actor: ''                  # Default is the GITHUB_ACTOR
          pre_build_commands: ''     # Installing additional dependencies (Arch Linux)

      # Clears the Cloudflare zone's cache via the Cloudflare API
      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
